{
    "collab_server" : "",
    "contents" : "#' Creates hexagonal tile map for the states of USA.\n#'\n#' @param d Numeric. Number between 0 and 1. Procentwise Diameter (length from\n#'   center to corner) of the tiles.\n#' @param center Logical. When TRUE returns the center coordinates of the tile\n#'   map.\n#' @param style Character. Selets the layout style of the tile map.\n#' @param size Numeric. Size of the tiles.\n#' @param long_offset Numeric. Value to offset the long output.\n#' @param lat_offset Numeric. Value to offset the lat output.\n#' @param exclude Character. Vector of state names which should be excluded\n#'   from the output. Matched with lowercase full state names.\n#' @return The available styles for this functions are \"NPR\".\n#' @examples\n#' library(ggplot2)\n#' crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)\n#' states_map <- hex_usa()\n#'\n#' ggplot(crimes, aes(map_id = state)) +\n#'   geom_map(aes(fill = Murder), map = states_map) +\n#'   expand_limits(x = states_map$long, y = states_map$lat)\n#'\n#' states_map <- hex_usa(d = 0.5)\n#'\n#' ggplot(crimes, aes(map_id = state)) +\n#'   geom_map(aes(fill = Murder), map = states_map) +\n#'   expand_limits(x = states_map$long, y = states_map$lat) +\n#'   geom_text(data = hex_usa(d = 0.5, center = TRUE),\n#'             aes(x = long, y = lat, label = states_abb),\n#'             inherit.aes = FALSE)\nhex_usa <- function(d = 0.95, center = FALSE, style = \"NPR\",\n                    size = 1, long_offset = 0, lat_offset = 0,\n                    exclude = character()) {\n\n  if(d <= 0 || d > 1) {\n    warning(\"d must be in the interval (0, 1], defaulted to 0.95\")\n    d <- 0.95\n  }\n  if(!(style %in% c(\"NPR\"))) {\n    warning(\"Unable to recognize style, defaulted to NPR\")\n    STYLE <- \"NPR\"\n  } else {\n    STYLE <- style\n  }\n\n  exclude <- intersect(hex_usa_data$region, exclude)\n  a <- size / 2\n  r <- a * 2 / sqrt(3)\n\n  dat0 <- hex_usa_data %>%\n    filter(style == STYLE) %>%\n    select(- style) %>%\n    mutate(long = long * size,\n           lat = lat * size * (r + a / sqrt(3)))\n\n  a <- size / 2 * d\n  r <- a * 2 / sqrt(3)\n\n  dat1 <- rbind(dat0 %>% mutate(long = long, lat = lat + r),\n                dat0 %>% mutate(long = long + a, lat = lat + a / sqrt(3)),\n                dat0 %>% mutate(long = long + a, lat = lat - a / sqrt(3)),\n                dat0 %>% mutate(long = long, lat = lat - r),\n                dat0 %>% mutate(long = long - a, lat = lat - a / sqrt(3)),\n                dat0 %>% mutate(long = long - a, lat = lat + a / sqrt(3))) %>%\n    mutate(group = as.numeric(group))\n\n  if (center) {\n    dat2 <- dat0 %>%\n      mutate(long = long - dat1[165, \"long\"] + long_offset,\n             lat = lat - dat1[165, \"lat\"] + lat_offset) %>%\n      filter(!(region %in% exclude))\n    return(dat2)\n  } else {\n    dat2 <- dat1 %>%\n      mutate(long = long - dat1[165, \"long\"] + long_offset,\n             lat = lat - dat1[165, \"lat\"] + lat_offset) %>%\n      filter(!(region %in% exclude))\n    return(dat2[order(dat2$region), ] %>%\n             mutate(order = 1:(306 - length(exclude) * 6)))\n  }\n}\n",
    "created" : 1495030204990.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2729081635",
    "id" : "505A16A0",
    "lastKnownWriteTime" : 1495042205,
    "last_content_update" : 1495042205967,
    "path" : "~/Documents/Academia/Github/tilemapr/R/hex_usa.R",
    "project_path" : "R/hex_usa.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}